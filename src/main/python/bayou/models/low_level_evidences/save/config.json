{
  "print_step": 500,
  "decoder": {
    "units": 256,
    "max_ast_depth": 32,
    "num_layers": 1,
    "vocab": {
      "java.lang.Boolean.Boolean(boolean)": 10,
      "DLoop": 3,
      "STOP": 0,
      "DBranch": 2,
      "java.lang.Integer.parseInt(java.lang.String)": 11,
      "java.io.DataInput.readBoolean()": 12,
      "java.lang.Double.isNaN(double)": 5,
      "java.lang.ref.Reference<Tau_T>.get()": 7,
      "java.lang.String.indexOf(java.lang.String,int)": 9,
      "DSubTree": 1,
      "CLASS0": 13,
      "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)": 6,
      "java.lang.String.length()": 4,
      "java.lang.String.substring(int,int)": 17,
      "java.util.Iterator<Tau_E>.next()": 15,
      "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)": 8,
      "java.util.StringTokenizer.hasMoreTokens()": 14,
      "java.util.StringTokenizer.nextToken()": 18,
      "java.util.Iterator<Tau_E>.hasNext()": 16
    },
    "vocab_size": 19,
    "chars": [
      "STOP",
      "DSubTree",
      "DBranch",
      "DLoop",
      "java.lang.String.length()",
      "java.lang.Double.isNaN(double)",
      "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)",
      "java.lang.ref.Reference<Tau_T>.get()",
      "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)",
      "java.lang.String.indexOf(java.lang.String,int)",
      "java.lang.Boolean.Boolean(boolean)",
      "java.lang.Integer.parseInt(java.lang.String)",
      "java.io.DataInput.readBoolean()",
      "CLASS0",
      "java.util.StringTokenizer.hasMoreTokens()",
      "java.util.Iterator<Tau_E>.next()",
      "java.util.Iterator<Tau_E>.hasNext()",
      "java.lang.String.substring(int,int)",
      "java.util.StringTokenizer.nextToken()"
    ]
  },
  "batch_size": 1,
  "model": "lle",
  "learning_rate": 0.0006,
  "checkpoint_step": 10,
  "latent_size": 64,
  "num_epochs": 500,
  "evidence": [
    {
      "units": 128,
      "num_layers": 1,
      "max_depth": -1,
      "name": "apicalls",
      "vocab": {
        "readBoolean": 4,
        "get": 0,
        "isNaN": 1,
        "hasMoreTokens": 2,
        "next": 3
      },
      "tile": 1,
      "chars": [
        "get",
        "isNaN",
        "hasMoreTokens",
        "next",
        "readBoolean"
      ],
      "vocab_size": 5,
      "max_nums": 7
    },
    {
      "units": 128,
      "num_layers": 1,
      "max_depth": -1,
      "name": "types",
      "vocab": {
        "Double": 1,
        "Iterator": 2,
        "DataInput": 5,
        "Boolean": 0,
        "Integer": 3,
        "IOException": 6,
        "WeakReference": 4
      },
      "tile": 1,
      "chars": [
        "Boolean",
        "Double",
        "Iterator",
        "Integer",
        "WeakReference",
        "DataInput",
        "IOException"
      ],
      "vocab_size": 7,
      "max_nums": 7
    },
    {
      "units": 128,
      "num_layers": 1,
      "max_depth": -1,
      "name": "keywords",
      "vocab": {
        "token": 4,
        "length": 3,
        "input": 13,
        "lang": 0,
        "boolean": 1,
        "integer": 5,
        "ref": 6,
        "reference": 7,
        "next": 8,
        "weak": 9,
        "get": 10,
        "string": 11,
        "java": 2,
        "int": 12
      },
      "tile": 1,
      "chars": [
        "lang",
        "boolean",
        "java",
        "length",
        "token",
        "integer",
        "ref",
        "reference",
        "next",
        "weak",
        "get",
        "string",
        "int",
        "input"
      ],
      "vocab_size": 14,
      "max_nums": 7
    },
    {
      "units": 64,
      "num_layers": 1,
      "max_depth": 8,
      "name": "callsequences",
      "vocab": {
        "java.lang.Boolean.Boolean(boolean)": 13,
        "java.lang.Double.isNaN(double)": 4,
        "STOP": 0,
        "java.lang.Integer.parseInt(java.lang.String)": 8,
        "java.io.DataInput.readBoolean()": 14,
        "java.lang.ref.Reference<Tau_T>.get()": 2,
        "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)": 9,
        "java.lang.String.indexOf(java.lang.String,int)": 5,
        "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)": 3,
        "java.lang.String.length()": 1,
        "java.lang.String.substring(int,int)": 10,
        "java.util.Iterator<Tau_E>.next()": 11,
        "java.util.StringTokenizer.hasMoreTokens()": 6,
        "java.util.StringTokenizer.nextToken()": 12,
        "java.util.Iterator<Tau_E>.hasNext()": 7
      },
      "tile": 1,
      "chars": [
        "STOP",
        "java.lang.String.length()",
        "java.lang.ref.Reference<Tau_T>.get()",
        "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)",
        "java.lang.Double.isNaN(double)",
        "java.lang.String.indexOf(java.lang.String,int)",
        "java.util.StringTokenizer.hasMoreTokens()",
        "java.util.Iterator<Tau_E>.hasNext()",
        "java.lang.Integer.parseInt(java.lang.String)",
        "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)",
        "java.lang.String.substring(int,int)",
        "java.util.Iterator<Tau_E>.next()",
        "java.util.StringTokenizer.nextToken()",
        "java.lang.Boolean.Boolean(boolean)",
        "java.io.DataInput.readBoolean()"
      ],
      "vocab_size": 15,
      "max_nums": 2
    },
    {
      "units": 32,
      "num_layers": 1,
      "max_depth": 8,
      "name": "formalparam",
      "vocab": {
        "InboundMessage": 2,
        "STOP": 0,
        "String": 5,
        "AbsListView": 3,
        "double": 1,
        "DataInput": 6,
        "int": 4
      },
      "tile": 1,
      "chars": [
        "STOP",
        "double",
        "InboundMessage",
        "AbsListView",
        "int",
        "String",
        "DataInput"
      ],
      "vocab_size": 7,
      "max_nums": 1
    },
    {
      "units": 16,
      "num_layers": 1,
      "max_depth": -1,
      "name": "returntype",
      "vocab": {
        "o": 0,
        "d": 7,
        "a": 2,
        "b": 3,
        "t": 9,
        "i": 6,
        "n": 1,
        "l": 4,
        "e": 5,
        "v": 8
      },
      "tile": 1,
      "chars": [
        "o",
        "n",
        "a",
        "b",
        "l",
        "e",
        "i",
        "d",
        "v",
        "t"
      ],
      "vocab_size": 10,
      "max_nums": 1
    },
    {
      "units": 32,
      "num_layers": 1,
      "max_depth": -1,
      "name": "classtype",
      "vocab": {
        "int[]": 5,
        "ResourcesIterator": 6,
        "LoadingDialog": 7,
        "AModemDriver": 8,
        "Map<Member,Object>": 9,
        "EClass": 10,
        "byte[]": 11,
        "Calc": 12,
        "EReference": 13,
        "Collection<?>": 14,
        "boolean": 2,
        "String[]": 3,
        "EGenericTypeConverter": 16,
        "NullMember": 17,
        "WeakReference<DiscussionListActivity>": 26,
        "int": 0,
        "AATHandler": 19,
        "Evaluator": 20,
        "Map<List<Member>,Object>": 21,
        "double": 22,
        "Logger": 23,
        "Iterator<EStructuralFeature.Setting>": 30,
        "long": 4,
        "E": 24,
        "ListView": 25,
        "String": 1,
        "TokenList": 18,
        "Iterator<? extends E>": 27,
        "enum": 35,
        "short": 28,
        "List<List<InboundMessage>>": 29,
        "Boolean": 36,
        "char[]": 31,
        "EStructuralFeature.Setting": 32,
        "T[]": 33,
        "List<EStructuralFeature.Setting>": 34,
        "Comparator<T>": 15
      },
      "tile": 1,
      "chars": [
        "int",
        "String",
        "boolean",
        "String[]",
        "long",
        "int[]",
        "ResourcesIterator",
        "LoadingDialog",
        "AModemDriver",
        "Map<Member,Object>",
        "EClass",
        "byte[]",
        "Calc",
        "EReference",
        "Collection<?>",
        "Comparator<T>",
        "EGenericTypeConverter",
        "NullMember",
        "TokenList",
        "AATHandler",
        "Evaluator",
        "Map<List<Member>,Object>",
        "double",
        "Logger",
        "E",
        "ListView",
        "WeakReference<DiscussionListActivity>",
        "Iterator<? extends E>",
        "short",
        "List<List<InboundMessage>>",
        "Iterator<EStructuralFeature.Setting>",
        "char[]",
        "EStructuralFeature.Setting",
        "T[]",
        "List<EStructuralFeature.Setting>",
        "enum",
        "Boolean"
      ],
      "vocab_size": 37,
      "max_nums": 8
    },
    {
      "units": 32,
      "num_layers": 1,
      "max_depth": -1,
      "name": "sorrreturntype",
      "vocab": {
        "Collection<T>": 4,
        "String": 1,
        "List<EObject>": 3,
        "Boolean": 7,
        "void": 0,
        "Object": 5,
        "int": 2,
        "double": 6
      },
      "tile": 1,
      "chars": [
        "void",
        "String",
        "int",
        "List<EObject>",
        "Collection<T>",
        "Object",
        "double",
        "Boolean"
      ],
      "vocab_size": 8,
      "max_nums": 10
    },
    {
      "units": 32,
      "num_layers": 1,
      "max_depth": 8,
      "name": "sorrformalparam",
      "vocab": {
        "STOP": 0,
        "AbsListView": 7,
        "TupleIterable": 8,
        "TupleList": 9,
        "EStructuralFeature": 11,
        "DataOutput": 17,
        "byte[]": 10,
        "Evaluator": 3,
        "Calc": 5,
        "String[]": 14,
        "Collection<? extends EObject>": 13,
        "String": 4,
        "Bundle": 12,
        "EObject": 15,
        "EStructuralFeature.Setting": 6,
        "Object": 1,
        "Collection<? extends T>": 16,
        "int": 2
      },
      "tile": 1,
      "chars": [
        "STOP",
        "Object",
        "int",
        "Evaluator",
        "String",
        "Calc",
        "EStructuralFeature.Setting",
        "AbsListView",
        "TupleIterable",
        "TupleList",
        "byte[]",
        "EStructuralFeature",
        "Bundle",
        "Collection<? extends EObject>",
        "String[]",
        "EObject",
        "Collection<? extends T>",
        "DataOutput"
      ],
      "vocab_size": 18,
      "max_nums": 10
    },
    {
      "units": 64,
      "num_layers": 1,
      "max_depth": 8,
      "name": "sorrcallsequences",
      "vocab": {
        "java.lang.String.replaceAll(java.lang.String,java.lang.String)": 3,
        "STOP": 0,
        "java.lang.String.indexOf(java.lang.String)": 2,
        "java.util.List.size()": 6,
        "java.lang.Integer.parseInt(java.lang.String)": 13,
        "java.util.List<java.lang.Object>.set(int,java.lang.Object)": 16,
        "java.util.regex.Pattern.matcher(java.lang.CharSequence)": 18,
        "java.util.Collection<Tau_E>.size()": 12,
        "java.lang.String.indexOf(java.lang.String,int)": 4,
        "java.lang.String.String(char[])": 21,
        "java.util.ArrayList<java.lang.String>.size()": 22,
        "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)": 5,
        "java.lang.String.length()": 1,
        "java.lang.String.trim()": 23,
        "java.lang.String.equalsIgnoreCase(java.lang.String)": 7,
        "java.lang.Double.Double(double)": 24,
        "java.util.StringTokenizer.nextToken()": 14,
        "java.lang.Boolean.Boolean(boolean)": 8,
        "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)": 25,
        "java.lang.Double.doubleValue()": 34,
        "java.util.Collections.singleton(Tau_T)": 26,
        "java.util.regex.Pattern.compile(java.lang.String)": 11,
        "java.util.List<Tau_E>.remove(java.lang.Object)": 27,
        "java.util.List<java.lang.Object>.indexOf(java.lang.Object)": 15,
        "java.lang.Boolean.valueOf(boolean)": 37,
        "java.lang.Boolean.booleanValue()": 35,
        "java.lang.ref.Reference<Tau_T>.get()": 20,
        "java.util.ArrayList<Tau_E>.ArrayList()": 29,
        "java.util.ArrayList<Tau_E>.ArrayList(int)": 17,
        "java.util.Collection<Tau_E>.add(Tau_E)": 30,
        "java.lang.String.substring(int,int)": 9,
        "java.util.HashMap<Tau_K,Tau_V>.HashMap()": 31,
        "java.util.regex.Matcher.group(int)": 32,
        "java.lang.CharSequence.length()": 33,
        "java.util.regex.Matcher.find()": 19,
        "java.lang.System.currentTimeMillis()": 10,
        "java.util.HashMap<Tau_K,Tau_V>.entrySet()": 28,
        "java.io.DataOutput.writeBoolean(boolean)": 36
      },
      "tile": 1,
      "chars": [
        "STOP",
        "java.lang.String.length()",
        "java.lang.String.indexOf(java.lang.String)",
        "java.lang.String.replaceAll(java.lang.String,java.lang.String)",
        "java.lang.String.indexOf(java.lang.String,int)",
        "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)",
        "java.util.List.size()",
        "java.lang.String.equalsIgnoreCase(java.lang.String)",
        "java.lang.Boolean.Boolean(boolean)",
        "java.lang.String.substring(int,int)",
        "java.lang.System.currentTimeMillis()",
        "java.util.regex.Pattern.compile(java.lang.String)",
        "java.util.Collection<Tau_E>.size()",
        "java.lang.Integer.parseInt(java.lang.String)",
        "java.util.StringTokenizer.nextToken()",
        "java.util.List<java.lang.Object>.indexOf(java.lang.Object)",
        "java.util.List<java.lang.Object>.set(int,java.lang.Object)",
        "java.util.ArrayList<Tau_E>.ArrayList(int)",
        "java.util.regex.Pattern.matcher(java.lang.CharSequence)",
        "java.util.regex.Matcher.find()",
        "java.lang.ref.Reference<Tau_T>.get()",
        "java.lang.String.String(char[])",
        "java.util.ArrayList<java.lang.String>.size()",
        "java.lang.String.trim()",
        "java.lang.Double.Double(double)",
        "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)",
        "java.util.Collections.singleton(Tau_T)",
        "java.util.List<Tau_E>.remove(java.lang.Object)",
        "java.util.HashMap<Tau_K,Tau_V>.entrySet()",
        "java.util.ArrayList<Tau_E>.ArrayList()",
        "java.util.Collection<Tau_E>.add(Tau_E)",
        "java.util.HashMap<Tau_K,Tau_V>.HashMap()",
        "java.util.regex.Matcher.group(int)",
        "java.lang.CharSequence.length()",
        "java.lang.Double.doubleValue()",
        "java.lang.Boolean.booleanValue()",
        "java.io.DataOutput.writeBoolean(boolean)",
        "java.lang.Boolean.valueOf(boolean)"
      ],
      "vocab_size": 38,
      "max_nums": 10
    }
  ],
  "reverse_encoder": {
    "units": 256,
    "max_ast_depth": 32,
    "num_layers": 1,
    "vocab": {
      "java.lang.Boolean.Boolean(boolean)": 10,
      "DLoop": 3,
      "STOP": 0,
      "DBranch": 2,
      "java.lang.Integer.parseInt(java.lang.String)": 11,
      "java.io.DataInput.readBoolean()": 12,
      "java.lang.Double.isNaN(double)": 5,
      "java.lang.ref.Reference<Tau_T>.get()": 7,
      "java.lang.String.indexOf(java.lang.String,int)": 9,
      "DSubTree": 1,
      "CLASS0": 13,
      "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)": 6,
      "java.lang.String.length()": 4,
      "java.lang.String.substring(int,int)": 17,
      "java.util.Iterator<Tau_E>.next()": 15,
      "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)": 8,
      "java.util.StringTokenizer.hasMoreTokens()": 14,
      "java.util.StringTokenizer.nextToken()": 18,
      "java.util.Iterator<Tau_E>.hasNext()": 16
    },
    "vocab_size": 19,
    "chars": [
      "STOP",
      "DSubTree",
      "DBranch",
      "DLoop",
      "java.lang.String.length()",
      "java.lang.Double.isNaN(double)",
      "java.lang.ref.WeakReference<Tau_T>.WeakReference(Tau_T)",
      "java.lang.ref.Reference<Tau_T>.get()",
      "java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)",
      "java.lang.String.indexOf(java.lang.String,int)",
      "java.lang.Boolean.Boolean(boolean)",
      "java.lang.Integer.parseInt(java.lang.String)",
      "java.io.DataInput.readBoolean()",
      "CLASS0",
      "java.util.StringTokenizer.hasMoreTokens()",
      "java.util.Iterator<Tau_E>.next()",
      "java.util.Iterator<Tau_E>.hasNext()",
      "java.lang.String.substring(int,int)",
      "java.util.StringTokenizer.nextToken()"
    ]
  }
}